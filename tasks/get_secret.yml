---

- name: Show info
  debug:
    msg:
      - "=== SECRET FROM GCP SECRET MANAGER ==="
      - "secret:  {{ gcp_secrets[item]['name'] }}"
      - "file:    {{ gcp_secrets[item]['file_path'] }}"

- name: Get active version of secret from GCP Secret Manager
  shell: |
    set -o pipefail && \
      gcloud secrets versions list "{{ gcp_secrets[item]['name'] }}" \
        --filter="state=enabled" \
        --sort-by=~createTime \
        --format="value(name)" \
      | head -n 1
  args:
    executable: /bin/bash
  delegate_to: localhost
  register: secret_active_version
  failed_when: >
    ('ERROR' in secret_active_version.stderr) or
    (secret_active_version.stdout == "")
  changed_when: false

- name: Get secret content from GCP Secret Manager
  command: |
    gcloud secrets versions access {{ secret_active_version.stdout }} \
      --secret="{{ gcp_secrets[item]['name'] }}" \
  args:
    executable: /bin/bash
  delegate_to: localhost
  register: secret_content
  failed_when: >
    ('ERROR' in secret_content.stderr) or
    (secret_content.stdout == "")
  changed_when: false

- name: Copy secret to file
  copy:
    content: "{{ secret_content.stdout }}"
    dest: "{{ gcp_secrets[item]['file_path'] }}"
    owner: "{{ gcp_secrets[item]['file_owner'] }}"
    group: "{{ gcp_secrets[item]['file_group'] | default(gcp_secrets[item]['file_owner']) }}"
    mode: "{{ gcp_secrets[item]['file_mode'] }}"
    backup: true
  failed_when:
    - gcp_secrets[item]['name'] is not defined
    - gcp_secrets[item]['file_path'] is not defined
    - gcp_secrets[item]['file_owner'] is not defined
    - gcp_secrets[item]['file_mode'] is not defined
  become: true

...
